# -*- mode: snippet -*-
# name: Database exploration
# key: db
# --
# -*- org-babel-min-lines-for-block-output: 0; org-confirm-elisp-link-function: nil; -*-

#+options: tags:nil toc:nil num:0 d:t p:t ^:{}
#+property: header-args:bash+ :results verbatim
#+property: header-args:sql+ :results value table :eval never-export
#+setupfile: ~/repos/org-html-themes/org/theme-readtheorg.setup

* Database exploration
:PROPERTIES:
:app-name: $1
:env: $2
:END:

** Meta                                                           :noexport:
- $0[[elisp:(jco/add-db-properties)][Add DB props]]
- [[elisp:(shell-command (concat "~/work/arthur/arthur vpn-config update-networkmanager " (org-entry-get nil "env" t)))][Update Arthur VPN config]]
- [[elisp:(shell-command (concat "nmcli c up zimpler-" (org-entry-get nil "env" t)))][Start VPN]]
- [[elisp:(shell-command (concat "nmcli c down zimpler-" (org-entry-get nil "env" t)))][Stop VPN]]
- [[elisp:(progn (end-of-line) (insert " => " (string-trim (shell-command-to-string (concat "nmcli c show | grep zimpler-" (org-entry-get nil "env" t) " | tr -s ' ' | cut -f 4 -d ' '")))))][Check VPN status]]

** Tables
#+begin_src sql
\pset null 'Ã˜'

SELECT tablename FROM pg_catalog.pg_tables
WHERE schemaname = 'public'
#+end_src

** Indexes
#+begin_src sql
SELECT tablename, indexname, indexdef FROM pg_catalog.pg_indexes
WHERE schemaname = 'public'
#+end_src