up:
  #!/usr/bin/env bash
  set -x
  docker compose --project-directory docker up -d
  supervisord

spin:
  #!/usr/bin/env bash
  set -x
  cabal build kontrakcja-server && \
    truncate -s0 logs/kontrakcja-server.log && \
    supervisorctl restart programs:

down:
  #!/usr/bin/env bash
  set -x
  supervisorctl stop all
  pkill supervisord
  docker compose --project-directory docker down
  pgrep -a slack || true

# List local bookmarks that are not pushed remotely.
local-bookmarks:
  #!/usr/bin/env bash
  set -x
  jj log -r 'bookmarks() & ~(master | remote_bookmarks())'

# Generate git hook to automatically prepare the commit message.
git-hooks:
  #!/usr/bin/env bash

  cat <<"EOF" > .git/hooks/prepare-commit-msg
  #!/usr/bin/env bash

  commit_msg_file=$1

  branch=$(jj workspace root)

  if [[ "${branch}" =~ ^.*core-?([0-9]+).* ]]; then
    prefix="CORE-${BASH_REMATCH[1]}"
  elif [[ "${branch}" =~ ^.*no-?issue.* ]]; then
    prefix="NO-ISSUE"
  fi

  current_msg=$(head -n 1 "${commit_msg_file}")

  if [ -n "$prefix" ] && (echo "${current_msg}" | grep -vi "^\[${prefix}\]") && \
    (echo "${current_msg}" | grep -vi "fixup\|squash")
  then
    sed -i.bak -e "1s/^/[$prefix] \n/" "${commit_msg_file}"
  fi
  EOF

  chmod +x .git/hooks/prepare-commit-msg
